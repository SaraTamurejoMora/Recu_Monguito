CONSULTAS
1. Nom i preu dels productes amb stock > 33 i categoria "ipad" (nom√©s el nom):
js
Copiar
Editar
db.products.find(
  { stock: { $gt: 33 }, categories: "ipad" },
  { name: 1, _id: 0 }
)
2. Restaurants al Bronx amb cuina "Chinese" o "Gelato":
js
Copiar
Editar
db.restaurants.find(
  {
    borough: "Bronx",
    cuisine: { $in: ["Chinese", "Gelato"] }
  }
)
3. Llibres amb 8 autors (pretty):
js
Copiar
Editar
db.llibres.find(
  { authors: { $size: 8 } }
).pretty()
4. Restaurants al carrer "Third Avenue" amb cuina "Pizza", ordenats descendent per name:
js
Copiar
Editar
db.restaurants.find(
  {
    "address.street": "Third Avenue",
    cuisine: "Pizza"
  }
).sort({ name: -1 })
5. Llibres que no tenen com autors ni "Anthony Briggs" ni "Adele Goldberg" (mostrar nom√©s authors):
js
Copiar
Editar
db.llibres.find(
  {
    authors: {
      $nin: ["Anthony Briggs", "Adele Goldberg"]
    }
  },
  { authors: 1, _id: 0 }
)
6. Llibres amb longDescription que acabi en "e", mostrant isbn i longDescription:
js
Copiar
Editar
db.llibres.find(
  {
    longDescription: { $regex: /e$/ }
  },
  { isbn: 1, longDescription: 1, _id: 0 }
)
7. Llibres amb entre 200 i 500 p√†gines, ordenats per id descendent i pretty:
js
Copiar
Editar
db.llibres.find(
  {
    pageCount: { $gte: 200, $lte: 500 }
  }
).sort({ _id: -1 }).pretty()
üõ† ACTUALITZACIONS
1. Afegir autor "Sam Watters" a "CodeGeneration in Action" si no hi √©s:
js
Copiar
Editar
db.llibres.updateOne(
  { title: "CodeGeneration in Action" },
  { $addToSet: { authors: "Sam Watters" } }
)
2. Afegir camp Assessment: 300 als llibres amb categoria "Internet" i status "Publish":
js
Copiar
Editar
db.llibres.updateMany(
  {
    categories: "Internet",
    status: "Publish"
  },
  { $set: { Assessment: 300 } }
)
3. Modificar el tercer autor del llibre "Portlets and apache portals":
js
Copiar
Editar
db.llibres.updateOne(
  { title: "Portlets and apache portals" },
  { $set: { "authors.2": "Tim Robinson" } }
)
4. Canviar categoria de "Macbook Pro" de "notebook" a "ipad":
js
Copiar
Editar
db.products.updateOne(
  { name: "MacBook Pro" },
  {
    $pull: { categories: "notebook" },
    $addToSet: { categories: "ipad" }
  }
)
üóë ELIMINACIONS
1. Eliminar el camp thumbnailUrl de tots els llibres:
js
Copiar
Editar
db.llibres.updateMany(
  {},
  { $unset: { thumbnailUrl: "" } }
)
2. Eliminar llibres amb la paraula "User" en longDescription (case-sensitive):
js
Copiar
Editar
db.llibres.deleteMany(
  { longDescription: { $regex: "User" } }
)
3. Eliminar autor "chris gray" de "ajax in practice":
js
Copiar
Editar
db.llibres.updateOne(
  { title: "ajax in practice" },
  { $pull: { authors: "chris gray" } }
)
4. Eliminar √∫ltima categoria del llibre "Struts in Action":
js
Copiar
Editar
db.llibres.updateOne(
  { title: "Struts in Action" },
  { $pop: { categories: 1 } }  // 1 per √∫ltim element
)
üìä AGREGACIONS (amb explicacions)
1. Mitjana dels preus dels productes:
js
Copiar
Editar
db.products.aggregate([
  {
    $group: {
      _id: null,
      avgPrice: { $avg: "$price" }
    }
  }
])
Explicaci√≥:

$group: agrupa tots els documents.

_id: null: no agrupa per cap camp espec√≠fic.

$avg: "$price": calcula la mitjana del camp price.

2. Quants restaurants hi ha per tipus de cuina:
js
Copiar
Editar
db.restaurants.aggregate([
  {
    $group: {
      _id: "$cuisine",
      total: { $sum: 1 }
    }
  }
])
Explicaci√≥:

Agrupem per cuisine.

Per cada grup, incrementem un contador amb $sum: 1.

3. Coordenades per cada street:
js
Copiar
Editar
db.restaurants.aggregate([
  {
    $group: {
      _id: "$address.street",
      coords: { $addToSet: "$address.coord" }
    }
  }
])
Explicaci√≥:

Agrupem per carrer (address.street).

$addToSet: afegeix valors √∫nics de coordenades per carrer.

4. N√∫mero de categories per cada producte, ordenat de menys a m√©s:
js
Copiar
Editar
db.products.aggregate([
  {
    $project: {
      name: 1,
      numCategories: { $size: "$categories" }
    }
  },
  { $sort: { numCategories: 1 } }
])
Explicaci√≥:

$project: creem un nou camp numCategories que compta quantes categories t√© cada producte.

$sort: ordenem ascendentment.

5. N√∫mero de vegades que apareix cada categoria (global):
js
Copiar
Editar
db.products.aggregate([
  { $unwind: "$categories" },
  {
    $group: {
      _id: "$categories",
      count: { $sum: 1 }
    }
  },
  {
    $project: {
      _id: 0,
      category: "$_id",
      count: 1
    }
  }
])
Explicaci√≥:

$unwind: separa cada element de l'array categories en un document.

$group: agrupa per categoria i compta.

$project: reanomena _id com category.
